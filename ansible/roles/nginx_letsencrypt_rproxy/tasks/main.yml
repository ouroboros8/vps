---

- name: clone letsencrypt from master
  git:
    repo: https://github.com/certbot/certbot.git
    dest: /opt/certbot

- name: ensure server_names_hash_bucket_size is not set
  # letsencrypt needs to temporarily override this because the hosts it uses
  # for authentication have very long names. The rest of the time the system
  # default should be fine.
  tags: [ config ]
  lineinfile:
    dest: /etc/nginx/nginx.conf
    state: absent
    regexp: '^\s*server_names_hash_bucket_size'
  notify:
    - validate nginx configuration
    - reload nginx

- name: allow nginx to reverse proxy
  tags: [ config ]
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes
  notify:
    - validate nginx configuration
    - reload nginx

- name: do all letsencrypt vhosts exist?
  shell: "[ -d /etc/letsencrypt/live/{{ item['host'] }} ]"
  register: all_vhosts_present
  ignore_errors: yes
  with_items: "{{ vhosts }}"

- name: if /etc/letsencrypt doesn't exist, set up certs
  # Use certonly because we manage our nginx config, and don't want
  # letsencrypt messing with it
  shell: >
    /opt/certbot/certbot-auto certonly --nginx --agree-tos --quiet
    -m dstrong@glyx.co.uk
    --domains "{{ vhosts|json_query('[*].host')|join(',') }}"
  when: all_vhosts_present|failed

- name: add vhost nginx configs
  tags: [ config ]
  template:
    src: templates/vhost.conf
    dest: /etc/nginx/conf.d/{{ item['name'] }}.conf
    owner: nginx
    mode: '640'
  notify:
    - validate nginx configuration
    - reload nginx
  with_items: "{{ vhosts }}"
